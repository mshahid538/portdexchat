version: '3.8'

services:
  # Development service
  dev:
    build:
      context: .
      target: development
      cache_from:
        - node:18-alpine
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/portdexchat
    command: pnpm dev --host 0.0.0.0 --port 3000
    env_file:
      - .env
    depends_on:
      - db
    # Add healthcheck
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Production service
  prod:
    build:
      context: .
      cache_from:
        - node:18-alpine
        - nginx:alpine
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/portdexchat
    env_file:
      - .env
    command: pnpm build && pnpm preview --host 0.0.0.0 --port 80
    depends_on:
      - db
    # Add healthcheck
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Database service
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=portdexchat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Add healthcheck
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  node_modules: # Named volume for node_modules 